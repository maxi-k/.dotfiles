# These are important. The first one enables the opengl backend. The last one is the vsync method. Depending on the driver you might need to use a different method.
# The other options are smaller performance tweaks that work well in most cases. 
# You can find the rest of the options here: [url]https://github.com/ch

backend = "glx";
glx-no-stencil = true;
glx-no-rebind-pixmap = true;

# -------------------- 
# Shadows
# -------------------- 

shadow = true;
no-dock-shadow = false;
shadow-radius = 10;
clear-shadow = false;

shadow-offset-x = -10;
shadow-offset-y = -10;
shadow-opacity = 0.4;
shadow-ignore-shaped = false;

shadow-exclude = [

];

# -------------------- 
# Opacity
# -------------------- 

menu-opacity = 1;
inactive-opacity = 1;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;
alpha-step = 0.06;


#################################
##
## Fading
##
##################################
#
## Fade windows during opacity changes.
fading = true;
## The time between steps in a fade in milliseconds. (default 10).
fade-delta = 4;
## Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.02;
## Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.02;
## Fade windows in/out when opening/closing
no-fading-openclose = true;
#
## Specify a list of conditions of windows that should not be faded.
fade-exclude = [ ];



#################################
##
## Other
##
##################################

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NETWM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events._
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;
# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NETWM_OPACITY on client windows, useful for window managers not passing NETWM_OPACITY of client windows to frame windows._
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

# Specify refresh rate of the screen.
# If not specified or 0, compton will try detecting this with X RandR extension.
refresh-rate = 0;

# Set VSync method. VSync methods currently available:
# none: No VSync
# drm: VSync with DRMIOCTL_WAIT_VBLANK. May only work on some drivers._
# opengl: Try to VSync with SGIvideo_sync OpenGL extension. Only work on some drivers._
# opengl-oml: Try to VSync with OMLsync_control OpenGL extension. Only work on some drivers._
# opengl-swc: Try to VSync with SGIswap_control OpenGL extension. Only work on some drivers. Works only with GLX backend. Known to be most effective on many drivers. Does not actually control paint timing, only buffer swap is affected, so it doesnâ€™t have the effect of --sw-opti unlike other methods. Experimental._
# opengl-mswc: Try to VSync with MESAswap_control OpenGL extension. Basically the same as opengl-swc above, except the extension we use._
# (Note some VSync methods may not be enabled at compile time.)
vsync = "opengl-swc";

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;
# Painting on X Composite overlay window. Recommended.
paint-on-overlay = true;

# Limit compton to repaint at most once every 1 / refreshrate second to boost performance._
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
sw-opti = false;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
# paint-on-overlay may make the flickering less obvious.
unredir-if-possible = true;

# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [ ];

# Use WMTRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time._
detect-transient = true;
# Use WMCLIENT_LEADER to group windows, and consider windows in the same group focused at the same time._
# WMTRANSIENT_FOR has higher priority if --detect-transient is enabled, too._
detect-client-leader = true;

#################################
#
# Window type settings
#
#################################

wintypes:
{
 tooltip =
 {
 # fade: Fade the particular type of windows._
 fade = true;
 # shadow: Give those windows shadow_
 shadow = true;
 # opacity: Default opacity for the type of windows._
 opacity = 1;
 # focus: Whether to always consider windows of this type focused._
 focus = true;
 };
};

